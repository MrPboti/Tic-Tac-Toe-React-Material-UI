{"version":3,"sources":["components/Square.js","components/Board.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Square","props","Button","className","winnerClass","color","variant","style","borderRadius","width","height","fontSize","padding","onClick","value","Board","row","col","board","cellCounter","i","columns","j","push","this","renderSquare","winnerSquares","squares","createBoard","React","Component","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","classes","AppBar","backgroundColor","position","Toolbar","Typography","href","document","body","calculateWinner","lines","length","a","b","c","winner","winnerRow","initialState","history","Array","fill","currentStepNumber","xIsNext","Game","state","move","slice","setState","concat","currentLocation","0","1","2","3","4","5","6","7","8","stepNumber","step","reverse","status","current","moves","map","desc","classButton","jumpTo","Container","display","alignItems","justifyContent","handleClick","align","Box","textAlign","reset","sortMoves","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9eab3100.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst Square = props => (\r\n\r\n<Button \r\n  className={`${props.winnerClass} square`}\r\n  color=\"secondary\"\r\n  variant=\"outlined\"   \r\n  style={{\r\n    borderRadius: 250,\r\n    width: \"80px\",\r\n    height:\"80px\",\r\n    fontSize: \"40px\",\r\n    padding: \"18px\",\r\n        }}\r\n  onClick={props.onClick}>\r\n\r\n  {props.value}\r\n</Button>\r\n\r\n);\r\n\r\nexport default Square;","import React from 'react';\r\nimport Square from './Square';\r\n\r\nclass Board extends React.Component {\r\n  createBoard(row, col) {\r\n    const board = [];\r\n    let cellCounter = 0;\r\n\r\n    for (let i = 0; i < row; i += 1) {\r\n      const columns = [];\r\n      for (let j = 0; j < col; j += 1) {\r\n        columns.push(this.renderSquare(cellCounter++));\r\n      }\r\n      board.push(<div key={i} className=\"board-row\">{columns}</div>);\r\n    }\r\n\r\n    return board;\r\n  }\r\n\r\n  renderSquare(i) {\r\n    const winnerClass =\r\n      this.props.winnerSquares &&\r\n      (this.props.winnerSquares[0] === i ||\r\n        this.props.winnerSquares[1] === i ||\r\n        this.props.winnerSquares[2] === i)\r\n        ? 'square--green'\r\n        : '';\r\n\r\n    return (\r\n      <Square\r\n        winnerClass={winnerClass}\r\n        key={i}\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return <div>{\r\n    this.createBoard(3, 3)}\r\n    <br></br>\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default Board;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar style={{backgroundColor: \"#161b22\"}} position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            Tic Tac Toe\r\n          </Typography>\r\n          <Button href=\"https://github.com/MrPboti/Tic-Tac-Toe-React-Material-UI\" color=\"inherit\">\r\n            github\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <br></br>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport Board from './components/Board';\nimport Header from './components/Header';\nimport \"./App.css\";\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\n\n\ndocument.body.style.backgroundColor = \"#0d1117\";\n\nconst calculateWinner = (squares) => {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i += 1) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return { winner: squares[a], winnerRow: lines[i] };\n    }\n  }\n\n  return { winner: null, winnerRow: null };\n};\n\nconst getLocation = (move) => {\n  const locationMap = {\n    0: 'row: 1, col: 1',\n    1: 'row: 1, col: 2',\n    2: 'row: 1, col: 3',\n    3: 'row: 2, col: 1',\n    4: 'row: 2, col: 2',\n    5: 'row: 2, col: 3',\n    6: 'row: 3, col: 1',\n    7: 'row: 3, col: 2',\n    8: 'row: 3, col: 3',\n  };\n\n  return locationMap[move];\n};\n\nconst initialState = {\n  history: [\n    {\n      squares: Array(9).fill(null),\n    },\n  ],\n  currentStepNumber: 0,\n  xIsNext: true,\n};\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.currentStepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares).winner || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([\n        {\n          squares,\n          currentLocation: getLocation(i),\n          stepNumber: history.length,\n        },\n      ]),\n      xIsNext: !this.state.xIsNext,\n      currentStepNumber: history.length,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      currentStepNumber: step,\n      xIsNext: step % 2 === 0,\n    });\n  }\n\n  sortMoves() {\n    this.setState({\n      history: this.state.history.reverse(),\n    });\n  }\n\n  reset() {\n    this.setState(initialState);\n  }\n\n  render() {\n    const { history } = this.state;\n    const current = history[this.state.currentStepNumber];\n    const { winner, winnerRow } = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const currentLocation = step.currentLocation ? `(${step.currentLocation})` : '';\n      const desc = step.stepNumber ? `Go to move #${step.stepNumber}` : 'Go to game start';\n      const classButton = move === this.state.currentStepNumber ? 'button--green' : '';\n\n      return (\n        <li key={move}>\n          <button className= {classButton}  onClick={() => this.jumpTo(move)}>\n            {`${desc} ${currentLocation}`}\n          </button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = `Winner ${winner}`;\n    } else if (history.length === 10) {\n      status = 'Draw. No one won.';\n    } else {\n      status = `Next player: ${this.state.xIsNext ? 'X' : 'O'}`;\n    }\n\n    return (\n      <div>\n        <Header/>\n        <div>\n        <Container>\n          <Container style={{ display: 'flex',alignItems: 'center',justifyContent: 'center'}}>\n            <Board\n                squares={current.squares}\n                winnerSquares={winnerRow}\n                onClick={i => this.handleClick(i)}\n            />\n          </Container>\n          \n          <Typography style={{color: \"#f0883e\"}}  align=\"center\" variant=\"h5\">\n            {status}\n          </Typography>\n          <br></br>\n          <Box textAlign='center'>\n            <Button \n              variant=\"contained\" \n              style={{backgroundColor: \"#8957e5\",color: \"#ffffff\"}} \n              onClick={() => this.reset()}>\n                New game\n            </Button>\n          </Box>\n\n        </Container>\n          <div>\n            <Button variant=\"outlined\" onClick={() => this.sortMoves()}>Sort moves</Button>\n            {moves}\n          </div>       \n\n         </div>\n     </div>\n    );\n  }\n}\n\nexport default Game;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}